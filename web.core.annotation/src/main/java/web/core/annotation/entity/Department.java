package web.core.annotation.entity;
// Generated 28 mars 2018 16:43:56 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Proxy;

/**
 * Department generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "department", catalog = "exemple_etat_objet", uniqueConstraints = @UniqueConstraint(columnNames = "DEPT_NO"))
public class Department implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer deptId;
	private String deptName;
	private String deptNo;
	private String location;
	private Set<Employee> employees = new HashSet<Employee>(0);

	public Department() {
	}

	public Department(int deptId, String deptName, String deptNo) {
		this.deptId = deptId;
		this.deptName = deptName;
		this.deptNo = deptNo;
	}

	public Department(int deptId, String deptName, String deptNo, String location, Set<Employee> employees) {
		this.deptId = deptId;
		this.deptName = deptName;
		this.deptNo = deptNo;
		this.location = location;
		this.employees = employees;
	}

	@Id

	@Column(name = "DEPT_ID", unique = true, nullable = false)
	public Integer getDeptId() {
		return this.deptId;
	}

	public void setDeptId(Integer deptId) {
		this.deptId = deptId;
	}

	@Column(name = "DEPT_NAME", nullable = false)
	public String getDeptName() {
		return this.deptName;
	}

	public void setDeptName(String deptName) {
		this.deptName = deptName;
	}

	@Column(name = "DEPT_NO", unique = true, nullable = false, length = 20)
	public String getDeptNo() {
		return this.deptNo;
	}

	public void setDeptNo(String deptNo) {
		this.deptNo = deptNo;
	}

	@Column(name = "LOCATION")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "department")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

}
