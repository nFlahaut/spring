package web.core.annotation.entity;
// Generated 28 mars 2018 16:43:56 by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Proxy;

/**
 * Employee generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "employee", catalog = "exemple_etat_objet", uniqueConstraints = @UniqueConstraint(columnNames = "EMP_NO"))
public class Employee implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Long empId;
	private Department department;
	private Employee manager;
	private String empName;
	private String empNo;
	private Date hireDate;
	private byte[] image;
	private String job;
	private float salary;
	private Set<Employee> employees = new HashSet<Employee>(0);

	public Employee() {
	}
	
	public Employee(Long empId, String empNo, String job) {
		this.empId = empId;
		this.empNo = empNo;
		this.job = job;
	}

	public Employee(Department department, Employee employeeByEmpId, String empName, String empNo, Date hireDate,
			String job, float salary) {
		this.department = department;
		this.empName = empName;
		this.empNo = empNo;
		this.hireDate = hireDate;
		this.job = job;
		this.salary = salary;
	}

	public Employee(Department department, Employee employeeByMngId,  String empName,
			String empNo, Date hireDate, byte[] image, String job, float salary, Set<Employee> employeesForMngId) {
		this.department = department;
		this.manager = employeeByMngId;
		this.empName = empName;
		this.empNo = empNo;
		this.hireDate = hireDate;
		this.image = image;
		this.job = job;
		this.salary = salary;
		this.employees = employeesForMngId;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "EMP_ID", unique = true, nullable = false)
	public Long getEmpId() {
		return this.empId;
	}

	public void setEmpId(Long empId) {
		this.empId = empId;
	}

	@ManyToOne(fetch = FetchType.LAZY/**, cascade=CascadeType.REFRESH**/)
	@JoinColumn(name = "DEPT_ID", nullable = true)
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MNG_ID", nullable = true)
	public Employee getManager() {
		return this.manager;
	}

	public void setManager(Employee employeeByMngId) {
		this.manager = employeeByMngId;
	}




	@Column(name = "EMP_NAME", nullable = true, length = 50)
	public String getEmpName() {
		return this.empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	@Column(name = "EMP_NO", unique = true, nullable = false, length = 20)
	public String getEmpNo() {
		return this.empNo;
	}

	public void setEmpNo(String empNo) {
		this.empNo = empNo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "HIRE_DATE", nullable = true, length = 10)
	public Date getHireDate() {
		return this.hireDate;
	}

	public void setHireDate(Date hireDate) {
		this.hireDate = hireDate;
	}

	@Column(name = "IMAGE", nullable = true)
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@Column(name = "JOB", nullable = false, length = 30)
	public String getJob() {
		return this.job;
	}

	public void setJob(String job) {
		this.job = job;
	}

	@Column(name = "SALARY", nullable = true, precision = 12, scale = 0)
	public float getSalary() {
		return this.salary;
	}

	public void setSalary(float salary) {
		this.salary = salary;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empId"/**, cascade= {CascadeType.PERSIST, CascadeType.REMOVE, CascadeType.REFRESH}**/)
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employeesForMngId) {
		this.employees = employeesForMngId;
	}



	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", empNo=" + empNo + ", hireDate=" + hireDate + ", job=" + job + "]";
	}
	
}
